name: Rust Bindings

on:
  push:
    branches:
      - master
      - main
      - gh-actions
  pull_request:
    branches:
      - master
      - main
      - gh-actions

jobs:
  ci:
    name: Compile, Build and Release
    runs-on: macos-latest
    steps:
      - name: Cache LLVM and Clang
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: ${{ runner.temp }}/llvm/10.0
          key: ${{ runner.os }}-cached-llvm-10.0

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: '10.0'
          directory: ${{ runner.temp }}/llvm/10.0
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}

      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt

      - name: Install WASM Target
        run: rustup target add wasm32-unknown-unknown

      - name: Install Cargo Tools (cbindgen)
        uses: actions-rs/cargo@v1
        continue-on-error: true
        with:
          command: install
          args: --force cbindgen

      - name: Install Cargo Tools (lipo)
        uses: actions-rs/cargo@v1
        continue-on-error: true
        with:
          command: install
          args: cargo-lipo

      - name: Setup Android SDK
        uses: android-actions/setup-android@v1

      - name: Cache NDK
        id: cache-ndk
        uses: actions/cache@v2
        with:
          path: /Users/runner/android/ndk-bundle
          key: ${{ runner.os }}-cached-ndk

      - name: Install Android NDK
        if: steps.cache-ndk.outputs.cache-hit != 'true'
        run: $ANDROID_SDK_ROOT/tools/bin/sdkmanager ndk-bundle

      - name: Set Android NDK Env
        run: echo '::set-env name=ANDROID_NDK_HOME::/Users/runner/android/ndk-bundle'

      - name: Install Android Targets
        run: rustup target add aarch64-linux-android armv7-linux-androideabi x86_64-linux-android i686-linux-android

      - name: Execute cargo test
        run: |
          cd rust
          cargo test

      - name: Execute build scripts
        run: |
          ./scripts/clean.sh
          ./scripts/init.sh
          ./scripts/build.sh
